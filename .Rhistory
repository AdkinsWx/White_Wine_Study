knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message = FALSE)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(dplyr)
library(GGally)
library(gridExtra)
library(diptest)
library(knitr)
'``{r echo=FALSE, Load_the_Data}
# Load the Data
w_winedf = read.csv('wineQualityWhites.csv')
# Load the Data
winedf = read.csv('wineQualityReds.csv')
# Load the Data
winedf = read.csv('wineQualityWhites.csv')
names(winedf)
summary(winedf)
#X is not a useable variable so we will remove below
wines <- subset(winedf, select = -X)
head(wines)
summary(wines$quality)
ggplot(wines, aes(quality))+
geom_histogram(binwidth = 1)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message = FALSE)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(dplyr)
library(GGally)
library(gridExtra)
library(diptest)
library(knitr)
summary(wines$quality)
ggplot(wines, aes(quality))+
geom_histogram(binwidth = 1)
summary(wines$residual.sugar)
ggplot(wines, aes(residual.sugar))+
geom_histogram(bins = 10)
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
0.95)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, 0.95))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message = FALSE)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(dplyr)
library(GGally)
library(gridExtra)
library(diptest)
library(knitr)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message = FALSE)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(dplyr)
library(GGally)
library(gridExtra)
library(diptest)
library(knitr)
# Load the Data
winedf = read.csv('wineQualityWhites.csv')
names(winedf)
summary(winedf)
#X is not a useable variable so we will remove below
wines <- subset(winedf, select = -X)
head(wines)
summary(wines$residual.sugar)
ggplot(wines, aes(residual.sugar))+
geom_histogram(bins = 10)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message = FALSE)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(dplyr)
library(GGally)
library(gridExtra)
library(diptest)
library(knitr)
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
0.85)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, 0.85))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
0.5)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, 0.5))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
0.99)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, 0.99))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
1.99)))
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
.95)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, .95))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')
summary(wines$residual.sugar)
ggplot(wines, aes(residual.sugar))+
geom_histogram(bins = 1)
summary(wines$residual.sugar)
ggplot(wines, aes(residual.sugar))+
geom_histogram(bins = 20)
summary(wines$residual.sugar)
ggplot(wines, aes(residual.sugar))+
geom_histogram(bins = 100)
summary(wines$residual.sugar)
ggplot(wines, aes(residual.sugar))+
geom_histogram(bins = 50)
summary(wines$residual.sugar)
ggplot(wines, aes(residual.sugar))+
geom_histogram(bins = 5)
summary(wines$residual.sugar)
ggplot(wines, aes(residual.sugar))+
geom_histogram(bins = 50)
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
.95)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .5)+
xlim(0, quantile(wines$residual.sugar, .95))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
.95)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, .95))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
.95)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, .5))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
.5)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, .5))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
.30)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, .30))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
.95)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, .95))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
.95)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, .95))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')+
geom_vline(xintercept = 1, color = 'green')
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
.5)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, .5))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')+
geom_vline(xintercept = 1, color = 'green')
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
.95)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, .95))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')+
geom_vline(xintercept = 1, color = 'green')
summary(wines$alcohol)
ggplot(wines, aes(alcohol))+
geom_histogram(binwidth = 0.1)+
geom_vline(xintercept = mean(wines$alcohol), color ="blue")+
geom_vline(xintercept = median(wines$alcohol), color='red')
p1 <- qplot(wines$fixed.acidity)
p2 <- qplot(wines$volatile.acidity)
p3 <- qplot(wines$citric.acid)
p4 <- qplot(wines$chlorides)
p5 <- qplot(wines$free.sulfur.dioxide)
p6 <- qplot(wines$total.sulfur.dioxide)
p7 <- qplot(wines$density)
p8 <- qplot(wines$pH)
p9 <- qplot(wines$sulphates)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, ncol = 3)
qplot(wines$citric.sulphates, binwidth= .01)
dip.test(wines$sulphates.acid)
qplot(wines$citric.acid, binwidth= .01)
dip.test(wines$citric.acid)
qplot(wines$sulphates, binwidth= .01)
dip.test(wines$sulphates)
View(wines)
library(ggplot2)
```{r echo=FALSE, Load_the_Data}
setwd("~/Rstudio_Files/Udacity/Project/R_Studio Github/White_Wine_Study")
winedf = read.csv('wineQualityWhites.csv')
wines <- subset(winedf, select = -X)
ggplot(wines, aes(quality))+
geom_histogram(binwidth = 1)
summary(wines$residual.sugar)
ggplot(wines, aes(residual.sugar))+
geom_histogram(bins = 50)
summary(subset(wines$residual.sugar,
wines$residual.sugar <
quantile(wines$residual.sugar,
.95)))
ggplot(wines, aes(residual.sugar))+
geom_histogram(binwidth = .1)+
xlim(0, quantile(wines$residual.sugar, .95))+
xlab("residual.sugar (Lower 95%)")+
geom_vline(xintercept = mean(wines$residual.sugar), color = 'blue')+
geom_vline(xintercept = median(wines$residual.sugar), color = 'red')+
geom_vline(xintercept = 1, color = 'green')
ggplot(wines, aes(alcohol))+
geom_histogram(binwidth = 0.1)+
geom_vline(xintercept = mean(wines$alcohol), color ="blue")+
geom_vline(xintercept = median(wines$alcohol), color='red')
p2 <- qplot(wines$volatile.acidity)
p1 <- qplot(wines$fixed.acidity)
p2 <- qplot(wines$volatile.acidity)
p3 <- qplot(wines$citric.acid)
p4 <- qplot(wines$chlorides)
p5 <- qplot(wines$free.sulfur.dioxide)
p6 <- qplot(wines$total.sulfur.dioxide)
p7 <- qplot(wines$density)
p8 <- qplot(wines$pH)
p9 <- qplot(wines$sulphates)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, ncol = 3)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message = FALSE)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(dplyr)
library(GGally)
library(gridExtra)
library(diptest)
library(knitr)
p1 <- qplot(wines$fixed.acidity)
p2 <- qplot(wines$volatile.acidity)
p3 <- qplot(wines$citric.acid)
p4 <- qplot(wines$chlorides)
p5 <- qplot(wines$free.sulfur.dioxide)
p6 <- qplot(wines$total.sulfur.dioxide)
p7 <- qplot(wines$density)
p8 <- qplot(wines$pH)
p9 <- qplot(wines$sulphates)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, ncol = 3)
qplot(wines$sulphates, binwidth= .01)
qplot(wines$sulphates, binwidth= .1)
qplot(wines$sulphates, binwidth= .001)
dip.test(wines$sulphates)
qplot(wines$sulphates, bins =30)
dip.test(wines$sulphates)
qplot(wines$sulphates, bins =30)
dip.test(wines$sulphates)
round(cor(wines), 3)
ggpairs(wines)
qplot(wines$sulphates, bins =30)
dip.test(wines$sulphates)
round(cor(wines), 3)
ggpairs(wines)
ggpairs(wines)
